server {
    listen 443 ssl default_server;

    ssl_certificate     /etc/nginx/certificates/self-signed.crt;
    ssl_certificate_key /etc/nginx/certificates/self-signed.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    root /var/www/client;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }

    access_log off;
    error_log  /var/log/nginx/quasar.myapp.com-error.log error;

    location /api {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80 default_server;

    root /var/www/client;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html;

    charset utf-8;

    location /.well-known/acme-challenge {
        proxy_pass http://127.0.0.1:3000/api/.well-known/acme-challenge;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }

    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }

    access_log off;
    error_log  /var/log/nginx/quasar.myapp.com-error.log error;

    location /api {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}